[
  {
    "question": "Что такое искусственная нейронная сеть?",
    "reference": "Искусственная нейронная сеть (ИНС) — это математическая модель, вдохновленная структурой и функцией биологических нейронных сетей. Она состоит из множества взаимосвязанных узлов, называемых нейронами, которые могут обрабатывать данные и делать прогнозы или классификации."
  },
  {
    "question": "Какие основные компоненты нейронной сети?",
    "reference": "Основные компоненты нейронной сети включают входной слой, скрытые слои и выходной слой. Каждый нейрон в слое связан с нейронами следующего слоя через веса, которые обновляются в процессе обучения."
  },
  {
    "question": "Что такое обучение нейронной сети?",
    "reference": "Обучение нейронной сети — это процесс, в ходе которого веса нейронов обновляются с использованием алгоритмов оптимизации (например, градиентного спуска) для минимизации ошибки между прогнозом сети и истинными метками."
  },
  {
    "question": "Что такое активационная функция?",
    "reference": "Активационная функция — это математическая функция, которая определяет, будет ли нейрон активирован, т.е. передаст ли он сигнал на следующий слой. Популярные активационные функции включают ReLU, сигмоиду и гиперболический тангенс."
  },
  {
    "question": "Что такое регуляризация в нейронных сетях?",
    "reference": "Регуляризация — это техника, используемая для предотвращения переобучения, которая включает в себя добавление штрафов за слишком большие веса или другие ограничения, которые помогают модели обобщать."
  },
  {
    "question": "Что такое сверточные нейронные сети (CNN)?",
    "reference": "Сверточные нейронные сети (CNN) — это тип нейронных сетей, которые специально разработаны для обработки данных, имеющих структуру решетки, таких как изображения, благодаря использованию сверток."
  },
  {
    "question": "Что такое рекуррентные нейронные сети (RNN)?",
    "reference": "Рекуррентные нейронные сети (RNN) — это тип нейронных сетей, который позволяет информации передаваться через временные шаги, что делает их подходящими для задач, связанных с последовательностями, например, для обработки текста или временных рядов."
  },
  {
    "question": "Как работает механизм обратного распространения ошибки в нейросетях?",
    "reference": "Обратное распространение ошибки — это алгоритм обучения нейронных сетей, использующий градиентный спуск для минимизации ошибки. Он включает прямой проход для вычисления ошибки и обратный проход для обновления весов."
  },
  {
    "question": "Чем различаются сверточные и рекуррентные нейросети?",
    "reference": "Сверточные нейросети обрабатывают пространственные данные (например, изображения) с помощью сверток и пулинга. Рекуррентные нейросети работают с последовательностями и используют скрытые состояния для учета временной зависимости."
  },
  {
    "question": "Как влияет размер выборки на обучение нейросети?",
    "reference": "Маленькая выборка может привести к переобучению, тогда как большая выборка способствует лучшей обобщающей способности модели, но требует больше вычислительных ресурсов."
  },
  {
    "question": "Какая модель лучше всего подходит для задачи классификации текста?",
    "reference": "Для классификации текста подходят разные модели: от простых (TF-IDF + логистическая регрессия) до продвинутых (LSTM, GRU, BERT, GPT), в зависимости от размера данных и требований к качеству."
  },
  {
    "question": "Какой фреймворк лучше выбрать для обучения нейросети: PyTorch или TensorFlow?",
    "reference": "PyTorch удобен для исследований и обучения благодаря гибкости и динамическому построению графа. TensorFlow хорошо подходит для промышленного развертывания и поддержки мобильных устройств."
  },
  {
    "question": "Какие шаги нужно предпринять, если нейросеть переобучается?",
    "reference": "Для борьбы с переобучением можно использовать регуляризацию (например, L1, L2, Dropout), уменьшить сложность модели, применить увеличение данных или использовать раннюю остановку."
  },
  {
    "question": "Какой pre-trained моделью лучше воспользоваться для генерации изображений?",
    "reference": "Для генерации изображений можно использовать StyleGAN для реалистичных изображений, Stable Diffusion для генерации по тексту и DALL-E для управляемого синтеза изображений."
  },
  {
    "question": "Как выбрать оптимальную архитектуру для задачи временных рядов?",
    "reference": "Для временных рядов подходят LSTM и GRU (для сложных зависимостей), TCN (для переменной длины последовательностей), а также трансформеры при наличии сложных зависимостей."
  },
  {
    "question": "Почему моя нейросеть не обучается?",
    "reference": "Причины могут быть связаны с плохой инициализацией весов, слишком высоким learning rate или проблемами градиентов (затухание, взрыв). Решения включают нормализацию, ограничение градиента и корректную инициализацию."
  },
  {
    "question": "Как бороться с исчезающим градиентом в глубоких нейросетях?",
    "reference": "Чтобы справиться с исчезающим градиентом, используют ReLU, нормализацию батча и остаточные связи (ResNet)."
  },
  {
    "question": "Что такое оптимизация гиперпараметров и как её проводить?",
    "reference": "Оптимизация гиперпараметров — это процесс подбора параметров модели (таких как скорость обучения, размер батча и число слоев) с целью улучшения её производительности, например с помощью Grid Search или байесовского подхода."
  },
  {
    "question": "Как организовать обучение нейросети на больших данных?",
    "reference": "Обучение на больших данных требует использования мини-батчей, распределенных вычислений (например, через PyTorch или TensorFlow) и эффективных форматов хранения данных, таких как HDF5 или Parquet."
  },
  {
    "question": "Что такое Transfer Learning и как он применяется?",
    "reference": "Transfer Learning позволяет использовать предварительно обученную модель для новой задачи, требующей минимального дообучения. Пример — использование CNN, обученной на ImageNet, для классификации медицинских изображений."
  },
  {
    "question": "Как работает метод оптимизации Adam в нейронных сетях?",
    "reference": "Adam — это адаптивный метод оптимизации, использующий как среднее значение градиента, так и его дисперсию, для более точной настройки весов модели."
  },
  {
    "question": "Что такое ванильный и многослойный перцептрон (MLP)?",
    "reference": "Ванильный перцептрон — это простейшая однослойная модель для линейно разделимых данных. Многослойный перцептрон (MLP) состоит из нескольких слоев и способен решать нелинейные задачи благодаря использованию активационных функций."
  },
  {
    "question": "Что такое нейронная сеть с долгосрочной памятью (LSTM)?",
    "reference": "LSTM (Long Short-Term Memory) — это разновидность рекуррентных нейронных сетей, предназначенная для решения проблемы исчезающих и взрывающихся градиентов, позволяя эффективно запоминать долгосрочные зависимости в последовательных данных."
  },
  {
    "question": "Как работает трансформер (Transformer) и почему он так популярен?",
    "reference": "Трансформер — это модель, основанная на механизме внимания, которая заменяет рекуррентные слои и позволяет эффективно обрабатывать длинные последовательности данных. Она используется в таких моделях, как BERT и GPT, и показывает выдающиеся результаты в NLP-задачах."
  },
  {
    "question": "Что такое кластеризация в нейронных сетях?",
    "reference": "Кластеризация в нейронных сетях — это процесс группировки данных, которые имеют схожие характеристики. Часто используется в задачах, таких как уменьшение размерности и выделение скрытых паттернов в данных."
  },
  {
    "question": "Как работает метод k-ближайших соседей (k-NN) в классификации?",
    "reference": "Метод k-ближайших соседей классифицирует объект, основываясь на метках его k ближайших соседей в обучающих данных. Это метод с нулевой обучаемостью, который эффективно работает при небольших выборках и не требует сложных вычислений."
  },
  {
    "question": "Как работает метод Dropout в борьбе с переобучением?",
    "reference": "Dropout случайным образом исключает нейроны из сети во время обучения, что предотвращает зависимость модели от отдельных нейронов и помогает обобщать, уменьшая риск переобучения."
  },
  {
    "question": "Что такое пороговая функция активации в однослойном персептроне и как она влияет на обучение?",
    "reference": "Пороговая функция активации в однослойном персептроне решает, активировать ли нейрон в зависимости от суммы входных сигналов. Она влияет на обучение, устанавливая порог, выше которого нейрон срабатывает, и настраивает веса в процессе обучения для достижения корректных выходных значений."
  },
  {
    "question": "Что такое задача 'исключающее ИЛИ' и как она работает?",
    "reference": "Задача 'исключающее ИЛИ' (XOR) заключается в том, чтобы определить, равны ли два бита, но с исключением: результат истинный, когда один из битов равен 1, а другой — 0. То есть, XOR возвращает '1' только в случае, когда биты разные."
  },
  {
    "question": "Что такое автоэнкодер и как он работает?",
    "reference": "Автоэнкодер — это нейронная сеть, которая обучается кодировать входные данные в сжимаемое представление и затем восстанавливать исходные данные. Сеть состоит из двух частей: энкодера, который преобразует данные в сжато представление (код), и декодера, который восстанавливает данные из этого представления."
  },
  {
    "question": "В чем разница между рекуррентной нейронной сетью (RNN) и релаксационной нейронной сетью?",
    "reference": "Рекуррентные нейронные сети (RNN) используют циклические связи, где выход на каждом шаге зависит от предыдущего состояния, что позволяет эффективно обрабатывать последовательные данные. Релаксационные нейронные сети обновляют свои состояния итеративно до достижения стабильного состояния, и обычно не имеют циклических связей, что делает их подходом для оптимизации или минимизации функции ошибки."
  },
  {
    "question": "Что такое самообучающиеся нейронные сети и как они работают?",
    "reference": "Самообучающиеся нейронные сети могут самостоятельно адаптировать свои параметры без необходимости в заранее подготовленных метках. Они используют методы, такие как обучение без учителя или обучение с подкреплением, чтобы извлекать закономерности из данных и улучшать свою работу без явного вмешательства человека."
  },
  {
    "question": "Что такое классификация образов и как она применяется в нейронных сетях?",
    "reference": "Классификация образов — это задача, в которой нейронная сеть должна определить, к какой категории или классу принадлежит заданный образ. Эта задача решается с помощью различных методов машинного обучения, включая нейронные сети, где сеть обучается на размеченных данных для распознавания паттернов и классификации новых объектов."
  },
  {
    "question": "Что такое групповое обучение в контексте нейронных сетей?",
    "reference": "Групповое обучение (или обучение с несколькими агентами) подразумевает процесс, в котором несколько нейронных сетей или агентов работают совместно, обучаясь на общей задаче или выполняя задачу с разделением труда. Это может включать в себя сотрудничество или конкуренцию между агентами для достижения наилучшего результата, например, в задаче коллективного распознавания образов или оптимизации."
  },
  {
    "question": "Как биология связана с нейронными сетями?",
    "reference": "Нейронные сети в искусственном интеллекте вдохновлены биологическими нейронными сетями, которые составляют мозг человека и других живых существ. Биологические нейроны взаимодействуют через синапсы, и этот процесс моделируется в искусственных нейронных сетях, где нейроны связаны между собой синаптическими весами. Обучение таких сетей аналогично синаптической пластичности, где связи между нейронами изменяются в зависимости от опыта, что позволяет сети улучшать свою способность к решению задач."
  },
  {
    "question": "Какую архитектуру нейронной сети мне выбрать для задачи классификации изображений?",
    "reference": "Для классификации изображений обычно используются сверточные нейронные сети (CNN), так как они хорошо справляются с распознаванием объектов на изображениях благодаря своей способности извлекать пространственные особенности. Примером архитектуры может быть сеть, основанная на сверточных слоях, подействующих на изображение для выделения ключевых признаков, и полносвязных слоях для принятия решений."
  },
  {
    "question": "Как мне оптимизировать свою нейронную сеть, чтобы она быстрее обучалась?",
    "reference": "Для ускорения обучения можно попробовать использовать методы, такие как уменьшение размера шага обучения (learning rate), применение методов оптимизации, например, Adam, и использование более эффективных архитектур, таких как Batch Normalization. Также полезным может быть использование GPU для ускорения вычислений."
  },
  {
    "question": "Как мне правильно настроить количество слоев и нейронов в нейронной сети?",
    "reference": "Настройка количества слоев и нейронов зависит от сложности задачи. Обычно для более простых задач достаточно одной или двух скрытых слоев, в то время как для более сложных задач, например, обработки изображений или текста, могут потребоваться более глубокие сети с большим количеством нейронов в каждом слое. Рекомендуется начинать с небольших сетей и постепенно увеличивать их размер, пока не будет достигнута оптимальная производительность."
  },
  {
    "question": "Как мне понять, что моя нейронная сеть обучается правильно?",
    "reference": "Чтобы понять, обучается ли нейронная сеть правильно, нужно отслеживать её метрики, такие как точность (accuracy), потери (loss) на обучающих и валидационных данных. Если потери на обучающих данных уменьшаются, а точность растет, значит, сеть обучается. Однако важно следить за метриками на валидационных данных, чтобы убедиться, что сеть не переобучается."
  }
]